[{"/Users/stefanusw/Downloads/potatoes/JS/react/redux/javan/src/index.js":"1","/Users/stefanusw/Downloads/potatoes/JS/react/redux/javan/src/App.js":"2","/Users/stefanusw/Downloads/potatoes/JS/react/redux/javan/src/redux/slices/productSlice.js":"3","/Users/stefanusw/Downloads/potatoes/JS/react/redux/javan/src/redux/store.js":"4"},{"size":341,"mtime":1667486098918,"results":"5","hashOfConfig":"6"},{"size":7900,"mtime":1672907781439,"results":"7","hashOfConfig":"6"},{"size":1871,"mtime":1672904662629,"results":"8","hashOfConfig":"6"},{"size":211,"mtime":1667489664822,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2j0zn4",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stefanusw/Downloads/potatoes/JS/react/redux/javan/src/index.js",[],[],"/Users/stefanusw/Downloads/potatoes/JS/react/redux/javan/src/App.js",["23","24","25","26"],[],"import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { initialState } from \"./redux/slices/productSlice\";\nimport { addQuantity,removeQuantity,clearQuantity } from \"./redux/slices/productSlice\";\nimport { useState,useEffect } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\"\n\n\n\nconst KEY = process.env.REACT_APP_STRIPE;\n\n\nfunction App() {\n  const products = useSelector((state) => state.productState.products);\n  const itemLength = products.length;\n  const dispatch = useDispatch();\n  const [dicountCode,setDiscountCode] = useState(\"\");\n  const [isPromo,setIsPromo] = useState(false);\n  const [discount,setDiscount] = useState(1);\n  const [stripeToken, setStripeToken] = useState(null);\n\n  const onToken =(token) => {\n    setStripeToken(token);\n}\n\n\n  const handleChange = (e)=> {\n    setDiscountCode(e.target.value);\n    console.log(dicountCode)\n    if (e.target.value===\"a\")  {\n      setIsPromo(true)\n      setDiscount(0.5)\n\n    }\n    else if (e.target.value===\"c\"){\n      setIsPromo(true)\n      setDiscount(0.9)\n    }\n    else {\n      setIsPromo(false)\n    }\n  }\n\n  \n\n  const totalprice = products.reduce((state,value) => {\n    return state + value.price*value.quantity\n  },0)\n\n  return (\n    <div className=\"App\">\n      \n\n      <div className=\"container \" >\n        <div className=\"row gap-5\">\n          <div className=\"col-12 col-md-7 \">\n            <div className=\"shadow-md p-4 shopping-cart\">\n              <h5\n                style={{\n                  textAlign: \"left\",\n                  marginBottom: \"2rem\",\n                  justifyContent:\"space-between\"\n                }}\n              >\n                {\" \"}\n                Shopping Cart <span style={{marginLeft:\"1rem\"}}>({itemLength} items)</span>\n                <hr/>\n              </h5>\n              \n                {products.map((product) => (\n                  <div key={product.id} className=\"row\" style={{\n                  paddingBottom: \"2rem\",\n                }}>\n                    <div className=\"col-3\">\n                      <div\n                        className=\"shadow-md\"\n                        style={{\n                          backgroundColor: \"lightgrey\",\n                          height: \"100%\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          padding: \"0.3rem\",\n                          borderRadius: \"0.5rem\",\n                        }}\n                      >\n                        <img src={product.img} width={\"200px\"} alt=\"\" />\n                      </div>\n                    </div>\n\n                    <div\n                      className=\"col-6\"\n                      style={{ textAlign: \"left\",display:\"flex\",flexDirection:\"column\",justifyContent:\"space-around\"  }}\n                    >\n                      <h5 style={{ fontWeight: \"bold\" }}>{product.nama}</h5>\n                      <h6>Category :  {product.category}</h6>\n                      <h6>Detail : <span></span>{product.detail}</h6>\n                      <div className=\"row\">\n                        <div className=\"col\" style={{ color: \"grey\",fontSize: \"14px\" }} \n                          onClick={() => dispatch(clearQuantity(product.id))}>\n                          REMOVE ITEM\n                        </div>\n                        \n                      </div>\n                    </div>\n\n                    <div className=\"col-3 \">\n                      <div\n                        className=\"d-flex align-center\"\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <button className=\" pb-1 pt-1 pl-3 pr-3 \" onClick={() =>  dispatch(removeQuantity(product.id))}>\n                          -\n                        </button>\n                        <button className=\"border pb-1 pt-1 pl-3 pr-3 \">{product.quantity}</button>\n                        <button className=\" pb-1 pt-1 pl-3 pr-3 \" onClick={() =>  dispatch(addQuantity(product.id))}>\n                          +\n                        </button>\n                      </div>\n\n                      <p\n                        style={{\n                          color: \"grey\",\n                          marginTop: \"4.5rem\",\n                          fontSize: \"16px\",\n                        }}\n                      >\n                        Price : {product.price}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </div>\n\n          <div className=\"col-12 col-md-4 mb-12\">\n            <div className=\"shadow-sm p-4 order-summary \">\n              <h5\n                style={{\n                  textAlign: \"left\",\n                  color: \"black\",\n                  marginBottom: \"1rem\",\n                }}\n              >\n                {\" \"}\n                Order Summary\n                <hr/>\n\n              </h5>\n\n              <div style={{ borderBottom: \"1px solid lightgrey\" }}>\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  <h6 style={{ textAlign: \"left\", color: \"grey\" }}>\n                    Temporary amount\n                  </h6>\n                  <h6>{totalprice}</h6>\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    margin:\"0.5rem 0\"\n                  }}\n                >\n                  <h6 style={{ textAlign: \"left\", color: \"grey\" }}>Shipping</h6>\n                  <h6>Free</h6>\n                </div>\n\n                <div style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    marginBottom: \"1rem\",\n                  }}>\n                <h6 style={{ textAlign: \"left\", color: \"grey\", }}>Add a promo code</h6>\n                <select id=\"cars\" name=\"cars\" onChange={(e)=>handleChange(e)}>\n                  <option value=\"a\">Stefanus123</option>\n                  <option value=\"b\">FakeCode</option>\n                  <option value=\"c\">Promo88</option>\n                  <option value=\"d\">IDK</option>\n                </select>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginTop: \"1rem\",\n                }}\n              >\n                <h6 style={{ textAlign: \"left\" }}>\n                  The total amount of <br /> (including VAT)\n                </h6>\n                <h6> {isPromo? discount*totalprice: totalprice}</h6>\n              </div>\n\n              {isPromo ?  <div class=\"alert alert-success mt-4\" role=\"alert\" style={{padding:\"0.4rem\"}}>\n                You Saved {` ${100 - discount*100}% `} \n              </div>:\"\"}\n\n              <StripeCheckout\n                  name='stefanus shop'\n                  image='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTieHDSnSrZDDryW9nYmcIfZ28BHQsVmHvnF7GEOQ2YEQ&s'\n                  billingAddress\n                  shippingAddress\n                  description='Your total is $20'\n                  amount={2000}\n                  token={onToken}\n                  stripeKey={KEY}\n              >\n\n              <button className=\"checkout-btn mt-2 w-100\">\n                GO TO CHECKOUT\n              </button>\n              </StripeCheckout>\n            </div>\n\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/stefanusw/Downloads/potatoes/JS/react/redux/javan/src/redux/slices/productSlice.js",[],[],"/Users/stefanusw/Downloads/potatoes/JS/react/redux/javan/src/redux/store.js",[],[],{"ruleId":"27","severity":1,"message":"28","line":5,"column":10,"nodeType":"29","messageId":"30","endLine":5,"endColumn":22},{"ruleId":"27","severity":1,"message":"31","line":7,"column":19,"nodeType":"29","messageId":"30","endLine":7,"endColumn":28},{"ruleId":"27","severity":1,"message":"32","line":9,"column":8,"nodeType":"29","messageId":"30","endLine":9,"endColumn":13},{"ruleId":"27","severity":1,"message":"33","line":23,"column":10,"nodeType":"29","messageId":"30","endLine":23,"endColumn":21},"no-unused-vars","'initialState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'stripeToken' is assigned a value but never used."]